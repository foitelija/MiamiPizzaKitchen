@page "/admin/products"
@inject IProductService ProductService
@attribute [Authorize(Roles ="Admin")]

<h3>Products</h3>

@if(ProductService.AdminProducts == null)
{
    <span>Загрузка продуктов...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Продукт</th>
                <th>Вариант</th>
                <th>Цена</th>
                <th>Видно?</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.AdminProducts" Context="product">
                <tr>
                    <td><img src="@product.ImageUrl" /></td>
                    <td>@product.Title</td>
                    <td>
                        @foreach (var variant in product.Variants)
                       {
                           <span>@variant.ProductType.Name</span><br />
                       }
                    </td>
                    <td>
                        @foreach (var variant in product.Variants)
                       {
                           <span>@variant.Price</span><br />
                       }
                    </td>
                    <td>@(product.isVisible ? "✔️" : "")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditProduct(product.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
}



@code {
    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetAdminProducts();
    }

    void EditProduct(int productId)
    {
        
    }
}
